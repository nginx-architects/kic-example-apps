apiVersion: v1
kind: Namespace
metadata:
  name: virtualserver-rate-limit
---
apiVersion: k8s.nginx.org/v1
kind: Policy
metadata:
  name: rate-limit-policy1
  namespace: virtualserver-rate-limit
spec:
  rateLimit:
    rate: 1r/m
    key: ${binary_remote_addr}
    zoneSize: 10M
    rejectCode: 429
# default is 503 Service Temporarily Unavailable
# 429 Too Many Requests fits better here as it is a client issue, not server
# Documentation:
# https://docs.nginx.com/nginx-ingress-controller/configuration/policy-resource/#ratelimit
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtualserver-rate-limit
  namespace: virtualserver-rate-limit
  labels:
    app: virtualserver-rate-limit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: virtualserver-rate-limit
  template:
    metadata:
      labels:
        app: virtualserver-rate-limit
    spec:
      containers:
      - name: virtualserver-rate-limit
        image: nginxinc/nginx-unprivileged
        ports:
          - containerPort: 8080
            protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: "100Mi"
          requests:
            cpu: "0.01"
            memory: "20Mi"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: default-conf
          readOnly: true
      volumes:
      - name: default-conf
        configMap:
          name: nginx-echo
          items:
            - key: default.conf
              path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: virtualserver-rate-limit
  namespace: virtualserver-rate-limit
spec:
  ports:
    - name: virtualserver-rate-limit
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: virtualserver-rate-limit
  type: ClusterIP
---
apiVersion: k8s.nginx.org/v1
kind: VirtualServer
metadata:
  name: virtualserver-rate-limit
  namespace: virtualserver-rate-limit
spec:
  ingressClassName: nginx
  host: "rate-limit.k8s.nginx.rocks"
  routes:
  - path: /
    action:
      pass: virtualserver-rate-limit-upstream
    policies:
    - name:  rate-limit-policy1
  upstreams:
    - name: virtualserver-rate-limit-upstream
      service: virtualserver-rate-limit
      port: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-echo
  namespace: virtualserver-rate-limit
data:
  default.conf: |
    server {
        listen 8080;
        location / {
            default_type text/plain;
            expires -1;
            return 200 'Server address: $server_addr:$server_port\nServer name: $hostname\nDate: $time_local\nURI: $request_uri\nRequest ID: $request_id\nHost header: $Host\n';
        }
    }